#Counting Point Mutations
'''Given two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s,t), is the number of corresponding symbols that differ in s and t.
Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
Return: The Hamming distance dH(s,t).
Sample Dataset
GAGCCTACTAACGGGAT
CATCGTAATGACGGCCT
Sample Output
7
'''
s = "GGCGTAATTCGTGACTGCGCGAAATGCGTCCCCAGCTTGATGGAATGTGCAGTCCGAAACAAGCTTCCTCCAGATTTCAAAGAGCACGTACTTACTAGTATGACTAAAAGTGTATAAGGACCTGTCGAACCATAAATCCTGTACGTGATGAAGATCTGCTATGCTTAATAGTGGCTGCCTAGTATGGAGGGATTAAACATTGGCGGTAGGATTCATCCAACGCAGGCACGGGGATACTTCACATCATCAGCACGTTTTTTATGTACAAAGGCAGATTACGCTGCTAGAATAAGAAACTGCAATAGGTCCATAGGAGTCCATAGAGAAGTTGTTCTGGCCAGCTCACGTTCGTGGGTTTCATAATATGACCAGAAGGGACCCTTAGTTAGTATCCTAGACCGGCATACAAAACGTGATCGTCAGTGCACTCTCGGGGGAGTACATGCTCTTACCTTTCTGTGCATCTACATGCCTACCCGTATTGACTGCATCGCTCAGAACGACCATCCTTACTCAAGCTCAAGGGGGCGGACTGTCGCCGATAACGCCCGCTAGCATGTAAGAAATAGGGCACACGCAAGACGAGAGTCACCCCTAGTTTGGCGGATCCTCCTAACAGTTTCTCGTATAGTATAAAATCCCAGGGTCGACGTCACCATCGTTACGCGAATGAGAAGATATTGATGTATGAGGGTTGACTGATGTGCCTCATAGTAATCAGCGTTCAGTCCCTTTTTTCAAATAAAAGCCGACACTTCCTGTCGTCGTCATAATAAGGCAGCCGAAAAGAGCTGGTTACCGTGTCACGACTTGGCATTGTATCTTGAGAGTATCCGCGAACTTCCCTTGTTCGAACGATAGCGCCCGCGAAACCGAGTGTGAGAAAGGGGGGAAGTACGCCGTAGTGTAGTTGGGCCGTATTTGGTCAAGTTCTATATGCACATCAGTTTACGATCATTAATGCAGTCTTCTTGT"
t = "ACCGTATCGCAGGCATGTACGATTTGGGTCTTCGGCGACATTGATTGAATGGATAGATAAAAACCGCCTAGGGTCGCCAGAGAGCCAGATATCACTTCTAGGAGTCAAAGGAGAGAAGCCCCTCATGAGGCTTATGTACTTAATGAGTAAGACAGCTTCAAAAATTTAGAATGGCCTACTCGTCTGGTGAGACGTCCTCATGGCTATGCTTCCTTTCCAAAGCCGGTATGGGGAAGTTTTATATCTGTAGCGAGCTCAATGTGGACCGGGGTCGTAGTCGATTAGAGTGGAACCATCTGAAACTAGGCAGTGGGGATCCATAGCGCCGGTCGGCCGGCCGCTAGATCCTCGGAGCCTTACGGGTGTCAACCGCATACGCCCGTAGAGTGTAACTGAGGCCGGGTCTGACAGATTACGCGACGTTCTGCGCTTATAGCATTGGATGCTCTCGCGTTGCTCGGTAGCTGCAACGCCAACCCTATCGCGTGTATCGCTGAACGCGACTACCTGGAGCAACCCCGGTAGGAACGCACGGCGGCGCAACGAGTTGAGTTGCATTTCAGAAATCAGCACCCAACGTCGCCGGCGTGCACACTGGTGTTGTGGGTGACCCAGACAGTGGTATGCTCACTAGAGAATACTGGTGTCGTGTACACCACCGCTACTCGCTTTGGGAGACCTTTGTAGTTTATGGTTCGAGTATGGACGTCTTTGTAGACGGCGTAATTCCACCCTTTTAAACGTGAGGGCGCAATTTTCAGTCTTCCTCCCAGTGTAGCGAGCAAAGAGAACTCGTTACGGAGTCCAGAGTTGGAATTGTGTGAATAAAGTCCTCACAATAAGGACTTGCGGCATCGGTGTCCCTTCCCGAACCGGGTTTGGGCGAGGTGGGGCGCACTTCGTATTCTAGTTATGCGGGTAGTGGGGAAGTGTATCAAGATAATCTTTGAATGATAGGTTAAGGAGGCGGCAACT"
Hamming_dist = 0
for i in range(0,len(s)):
  if s[i]!= t[i]:
    Hamming_dist = Hamming_dist+1
print(Hamming_dist)


'''or
print ([a!=b for a,b in zip(s,t)].count(True))

or 
print(sum([a!=b for a,b in zip(s,t)]))
because print(sum([True,True])) True will be taken as 1.
'''

